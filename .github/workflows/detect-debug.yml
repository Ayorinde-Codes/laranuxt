name: Detect Debug
on:
  push:
    branches-ignore:
      - staging
      - production
    # branches: [ staging, production ]
jobs:
  changedfiles:
    runs-on: ubuntu-latest
    outputs:
      vue: ${{ steps.changes.outputs.vue }}
      php: ${{ steps.changes.outputs.php }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changes
        run: |
          echo "::set-output name=vue::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .vue$ | xargs)"
          echo "::set-output name=php::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .php$ | xargs)"
  searchconsole:
    runs-on: ubuntu-latest
    needs: changedfiles

    if: ${{ needs.changedfiles.outputs.vue != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Search for console.log
        run: |
          message="console.log function call found in new committed code"
          for f in $files
            do
              if egrep 'console.log' -q $f
              then
                echo "::error file=$f::$message"
              fi
          done
        env:
          files: ${{ needs.changedfiles.outputs.vue }}

  searchray:
    runs-on: ubuntu-latest
    needs: changedfiles

    if: ${{ needs.changedfiles.outputs.php != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Search for ray
        run: |
          message="ray function call found in new committed code"
          for f in $files
            do
              if egrep 'ray(' -q $f
              then
                echo "::error file=$f::$message"
              fi
          done
        env:
          files: ${{ needs.changedfiles.outputs.php }}
